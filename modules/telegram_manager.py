"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
"""

import logging
import os
from datetime import datetime

import telegram
from flask import current_app

logger = logging.getLogger(__name__)

class TelegramManager:
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
    """
    
    @staticmethod
    def send_message(message, disable_notification=False):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–∞—Ç
        
        Args:
            message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            disable_notification: –û—Ç–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            
        Returns:
            bool: True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            token = os.environ.get('TELEGRAM_BOT_TOKEN')
            chat_id = os.environ.get('TELEGRAM_CHAT_ID')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if not token or not chat_id:
                logger.warning("Telegram notification not sent: missing token or chat_id in environment")
                return False
            
            # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot = telegram.Bot(token)
            bot.send_message(
                chat_id=chat_id,
                text=message,
                parse_mode=telegram.ParseMode.HTML,
                disable_notification=disable_notification
            )
            
            logger.info(f"Telegram message sent successfully: {message[:100]}...")
            return True
            
        except Exception as e:
            logger.error(f"Error sending Telegram message: {str(e)}")
            return False
    
    @staticmethod
    def send_server_status_notification(server, is_online):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ —Å–µ—Ä–≤–µ—Ä–∞
        
        Args:
            server: –æ–±—ä–µ–∫—Ç Server
            is_online: —Ñ–ª–∞–≥ —Å—Ç–∞—Ç—É—Å–∞ (True/False)
            
        Returns:
            bool: True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        status = "üü¢ –¥–æ—Å—Ç—É–ø–µ–Ω" if is_online else "üî¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        status_changed = "–∏–∑–º–µ–Ω–∏–ª—Å—è" if server.status == is_online else "–Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è"
        
        message = f"""
<b>–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ {server.name}</b>
–°–µ—Ä–≤–µ—Ä <b>{status}</b>
IP: {server.ip_address}
–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
        return TelegramManager.send_message(message)
    
    @staticmethod
    def send_disk_usage_warning(server, usage_percent):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–∏—Å–∫–∞
        
        Args:
            server: –æ–±—ä–µ–∫—Ç Server
            usage_percent: –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∏—Å–∫–∞
            
        Returns:
            bool: True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        message = f"""
<b>‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –¥–∏—Å–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {server.name}</b>
–î–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>{usage_percent}%</b>
IP: {server.ip_address}
–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
        return TelegramManager.send_message(message)
    
    @staticmethod
    def send_ssl_expiration_warning(domain, days_left):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        
        Args:
            domain: –æ–±—ä–µ–∫—Ç Domain
            days_left: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
            
        Returns:
            bool: True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        message = f"""
<b>‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ</b>
–î–æ–º–µ–Ω: <b>{domain.name}</b>
–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ <b>{days_left} –¥–Ω–µ–π</b>
–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
        return TelegramManager.send_message(message)
        
    @staticmethod
    def send_domain_check_warning(domain, error_message):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –¥–æ–º–µ–Ω–æ–º
        
        Args:
            domain: –æ–±—ä–µ–∫—Ç Domain
            error_message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            
        Returns:
            bool: True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        message = f"""
<b>‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ–º–µ–Ω–æ–º {domain.name}</b>
–û—à–∏–±–∫–∞: <b>{error_message}</b>
–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
        return TelegramManager.send_message(message)
    
    @staticmethod
    def send_debug_message(text):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        
        Args:
            text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            
        Returns:
            bool: True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        message = f"""
<b>üîß –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>
{text}
–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
        return TelegramManager.send_message(message, disable_notification=True)